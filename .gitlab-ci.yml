stages:
  - install
  - notify

.build_job: &build_job
  stage: install
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  image:
    name: docker:latest
    entrypoint: [""]
  services:
    - docker:dind
  tags:
    - Gitlab-Runner
  before_script:
    - DOCKER_HOST='/var/run/docker.sock'; if [ ! -S "$DOCKER_HOST" ]; then DOCKER_HOST='tcp://docker:2375'; export DOCKER_HOST=$DOCKER_HOST;fi; echo $DOCKER_HOST
    - apk add --no-cache curl jq py3-pip
    - pip install awscli
    - eval $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - docker build -f Dockerfile -t tiendav1-front .
    - docker tag tiendav1-front:latest $AWS_ECR/tiendav1-front:production-mibulevar-cupetcfg
    - docker push $AWS_ECR/tiendav1-front:production-mibulevar-cupetcfg
    - docker login -u admin --password Guaj1r1t0s* nexus.guajitech.com
    - docker tag $AWS_ECR/tiendav1-front:production-mibulevar-cupetcfg nexus.guajitech.com/tiendav1-front:production-mibulevar-cupetcfg
    - docker push nexus.guajitech.com/tiendav1-front:production-mibulevar-cupetcfg
    - echo "DEPLOYED SUCCESSFULLY"

build_prod:
  only:
    - prod-MiBulevar-Cupetcfg
  environment:
    name: MIBULEVAR
  <<: *build_job

success:
  image: alpine:latest
  stage: notify
  script:
    - apk add --update git curl
    - wget https://raw.githubusercontent.com/armandofcom/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - /bin/ash ./send.sh success $WEBHOOK_URL
  when: on_success

failure:
  image: alpine:latest
  stage: notify
  script:
    - apk add --update git curl
    - wget https://raw.githubusercontent.com/armandofcom/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - /bin/ash ./send.sh failure $WEBHOOK_URL
  when: on_failure
