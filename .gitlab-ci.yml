stages:
  - install
  - deploy
  - notify
  
.build_job: &build_job
  stage: install
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  image: 
    name: docker:latest
    entrypoint: [""]
  services:
    - docker:dind
  tags:
    - Gitlab-Runner
  before_script:
    - DOCKER_HOST='/var/run/docker.sock'; if [ ! -S "$DOCKER_HOST" ]; then DOCKER_HOST='tcp://docker:2375'; export DOCKER_HOST=$DOCKER_HOST;fi; echo $DOCKER_HOST
    - apk add --no-cache curl jq py3-pip
    - pip install awscli
    - eval $(aws ecr get-login --no-include-email --region us-east-1)
  script:
    - docker build -f Dockerfile -t tiendav1-front .
    - docker tag tiendav1-front:latest $AWS_ECR/tiendav1-front:$VERSION_TAG
    - docker push $AWS_ECR/tiendav1-front:$VERSION_TAG
    - echo "DEPLOYED SUCCESSFULLY"

build_dev:
  only:
    - dev
  environment:
    name: DEV
  <<: *build_job

build_staging:
  only:
    - staging
    - feature/cicd
  environment:
    name: STAGING
  <<: *build_job

build_prod:
  only:
    - support/cliente
  environment:
    name: PROD
  <<: *build_job

deploy_dev:
  only:
    - dev
  stage: deploy
  before_script:
    - apk add --no-cache bash python3 py3-pip
    - pip3 install --upgrade pip
    - pip3 install --no-cache-dir awscli
  environment:
    name: DEV
  tags:
    - Gitlab-Runner
  script:
    - echo $DEPLOYED | bash

deploy_staging:
  only:
    - staging
    - feature/cicd
  stage: deploy
  before_script:
    - apk add --no-cache bash python3 py3-pip
    - pip3 install --upgrade pip
    - pip3 install --no-cache-dir awscli
  environment:
    name: STAGING
  tags:
    - Gitlab-Runner
  script:
    - echo $DEPLOYED | bash

deploy_prod:
  only:
    - support/cliente
  stage: deploy
  before_script:
    - apk add --no-cache bash python3 py3-pip
    - pip3 install --upgrade pip
    - pip3 install --no-cache-dir awscli
  environment:
    name: PROD
  tags:
    - Gitlab-Runner
  script:
    - echo $DEPLOYED | bash

success:
  image: alpine:latest
  stage: notify
  script:
    - apk add --update git curl
    - wget https://raw.githubusercontent.com/DiscordHooks/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - /bin/ash ./send.sh success $WEBHOOK_URL
  when: on_success

failure:
  image: alpine:latest
  stage: notify
  script:
    - apk add --update git curl
    - wget https://raw.githubusercontent.com/DiscordHooks/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - /bin/ash ./send.sh failure $WEBHOOK_URL
  when: on_failure


