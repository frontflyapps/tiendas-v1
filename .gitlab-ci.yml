stages:
  - install
  - notify

install:
  stage: install
  only:
    - dev
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  tags:
    - Gitlab-Runner
  image: 
    name: nikolaik/python-nodejs:python3.8-nodejs14
    entrypoint: [""]
  services:
    - nikolaik/python-nodejs:python3.8-nodejs14
  cache:
   paths:
    - node_modules
  before_script:
    - DOCKER_HOST='/var/run/docker.sock'; if [ ! -S "$DOCKER_HOST" ]; then DOCKER_HOST='tcp://docker:2375'; export DOCKER_HOST=$DOCKER_HOST;fi; echo $DOCKER_HOST
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
    - unzip awscli-bundle.zip
    - ./awscli-bundle/install -b ~/bin/aws
    - export PATH=~/bin:$PATH
  script:
    - npm install
    - npm install -g typescript@4.6.2
    - npm run build --prod
    - aws s3 sync --acl public-read --metadata-directive REPLACE --cache-control max-age=0,public dist/tienda-angular-b2b s3://cloudfront-tienda.guajitech.com --delete
    - aws cloudfront create-invalidation --distribution-id E3RTEPLSNH8HOK --paths "/*"
    - echo "DEPLOYED SUCCESSFULLY"

success:
  image: alpine:latest
  stage: notify
  script:
    - apk add --update git curl
    - wget https://raw.githubusercontent.com/armandofcom/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - /bin/ash ./send.sh success $WEBHOOK_URL
  when: on_success

failure:
  image: alpine:latest
  stage: notify
  script:
    - apk add --update git curl
    - wget https://raw.githubusercontent.com/armandofcom/gitlab-ci-discord-webhook/master/send.sh
    - chmod +x send.sh
    - /bin/ash ./send.sh failure $WEBHOOK_URL
  when: on_failure
